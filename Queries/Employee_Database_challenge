-- Retrieve the emp_no, first_name, and last_name columns from the Employees table
select emp_no, first_name, last_name 
from employees;

-- Retrieve the title, from_date, and to_date columns from the Titles table.
select title, from_date, to_date
from titles;

select e.emp_no, e.first_name, e.last_name, e.birth_date, ti.title, ti.from_date, ti.to_date
into retirement_titles
from employees as e
join titles as ti on (e.emp_no=ti.emp_no)
where (e.birth_date between '1952-01-01' and '1955-12-31')


-- Use Distinct with Orderby to remove duplicate rows
SELECT DISTINCT ON (emp_no) emp_no,
first_name,last_name,title
INTO unique_titles
FROM retirement_titles
ORDER BY emp_no, to_date DESC;

-- the number of employees by their most recent job title who are about to retire.
select title, count(*) as count
into retiring_titles
from unique_titles
group by title
order by count(*) desc

-- the total number of people that will retire 
select sum(count) from retiring_titles

-- Retrieve the emp_no, first_name, last_name, and birth_date columns from the Employees table.
select DISTINCT ON (e.emp_no) e.emp_no, e.first_name, e.last_name, e.birth_date, de.from_date, de.to_date, t.title
INTO mentorship_eligibilty
from employees as e
join dep_emp as de
on(e.emp_no=de.emp_no)
join titles as t
on(e.emp_no=t.emp_no)
where (de.to_date = '9999-01-01') 
and (e.birth_date between '1965-01-01' and '1965-12-31')
order by e.emp_no


-- The Employees Eligible for the Mentorship Program by title
select title, count(*) as count
into Count_eligible_mentors
from mentorship_eligibilty
group by title
order by count(*) desc


-- creating table to get the avarge AVG_mentees_per_mentor
select(rt.count/cem.count) as f
into AVG_mentees_per_mentor
	from Count_eligible_mentors as cem
	join retiring_titles as rt
	on cem.title = rt.title
	

-- the number 0f the mentees for each mentor, the average, and % of total
select cem.title as title, cem.count as mentors_count, 
concat(round((cem.count /(select sum(count) from Count_eligible_mentors)::float)*100),'%') as percentage_of_total_mentors,
rt.count as Retirees_count,
concat(round((rt.count /(select sum(count) from retiring_titles)::float)*100),'%') as percentage_of_total_retiring,
(rt.count/cem.count) as mentees_for_each_mentor,
(select AVG(f)::NUMERIC(10,2) as a from AVG_mentees_per_mentor) as AVG_mentees_per_mentor
from Count_eligible_mentors as cem
join retiring_titles as rt
on cem.title = rt.title
group by cem.title, cem.count, rt.count
order by mentees_for_each_mentor desc




